GEL_SymbolAddRel()
------------------

Loads additional symbol information with relocation information.

**Syntax**

**GEL_SymbolAddRel( "**\ fileName\ **",** code_start\ **,**
data_start[\ **,** **"**\ cpuName\ **"**\ [**, "**\ boardName\ **"**]]
**);**

**Parameters**

fileNamenames the symbol file containing the symbol information. The
fileName must be enclosed in quotation marks. The symbol file can be a
standard COFF output file (\*.out) or a specific symbol file obtained
during the build process.

code_startspecifies the starting address where the code sections are to
be loaded in memory.

data_startspecifies the starting address where the data sections are to
be loaded in memory.

cpuName(optional) names the CPU on which to load the symbolic
information (useful in a multiprocessor environment). The cpuName must
be enclosed in quotation marks.

boardName(optioanal) names the board on which to load the symbolic
information. If not specified, uses the board name of the processor on
which this GEL function is executed. The boardName must be enclosed in
quotation marks.

**Description**

Symbol information can be appended to the existing symbol table. This
function loads the symbol information from the specified symbol file.
GEL_SymbolAdd and GEL_SymbolAddRel differ from GEL_SymbolLoad and
GEL_SymbolLoadRel in that they do not clear the contents of the existing
symbol table before loading the new symbols. Symbols are loaded at the
code and data addresses specified by the relocation information.

If the file is not in the current directory, provide a full path name
within the string. A double backslash escape sequence is required to
ensure that you get a backslash into the filename entry.

The relocation information is specified using an absolute address that
identifies where the sections are to be loaded in memory.

The cpuName and boardName must match the Processor Name and Board Name
as configured in the multiprocessor setup. In a single processor system,
you do not need to fill these fields.

**Synchronous**

Synchronous from GEL: No

Completely synchronous: No

**Example**

GEL_SymbolAddRel("c:\\mydir\\myfile.out", 16, 64, "cpu_a", "Simulator");

**Related Topics**

`GEL_Load() <GEL_Load.html>`__

`GEL_SymbolAdd() <GEL_SymbolAdd.html>`__

`GEL_SymbolLoad() <GEL_SymbolLoad.html>`__

`GEL_SymbolRemove() <GEL_SymbolRemove.html>`__

`GEL_UnloadAllSymbols() <GEL_UnloadAllSymbols.html>`__
