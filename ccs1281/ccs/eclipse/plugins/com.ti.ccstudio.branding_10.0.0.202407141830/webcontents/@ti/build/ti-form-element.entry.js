import { r as registerInstance, h, H as Host } from './core-800e68f4.js';

const FormElement = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return (h(Host, { class: {
                'ti-form-element': true,
                'ti-form-element-has-error': this.error,
                'ti-form-element-is-required': this.required
            } }, this.labelText && h("label", { class: "ti-form-element-label" }, this.labelText), h("div", { class: "ti-form-element-input" }, h("slot", null)), this.hintText && h("div", { class: "ti-form-element-hintText" }, this.hintText), h("div", { class: "ti-form-element-errorText" }, this.error && h("span", null, this.errorText))));
    }
    static get style() { return "/*\n* ==========================================================================\n* _polaris.colors.scss\n* This file imports the Polaris color palette.\n* ==========================================================================\n*/\n/*\n* --------------------------------------------------------------------------\n* color palette\n* --------------------------------------------------------------------------\n*/\n/*\n* ==========================================================================\n* _polaris.mixins.scss\n* This file contains Polaris mixins\n* prefix with mix-\n* ==========================================================================\n*/\n/*\n* ==========================================================================\n* _polaris-variables.scss\n* This file contains global-css variables and is using component based naming.\n*\n* Naming structure: [application(namespacing)]-[type]-[function]-[property]\n* ==========================================================================\n*/\n/*\n* --------------------------------------------------------------------------\n* Color variables\n* --------------------------------------------------------------------------\n*/\n/*\n* Polaris Component color definitions\n*/\n/*\n* Polaris Card Background color definitions\n* Ref: (http://polaris/01-ui-style-foundations.html#02-style-principles.03-background-color)\n*/\n/*\n* --------------------------------------------------------------------------\n* shape variables\n* --------------------------------------------------------------------------\n*/\n/*\n* Polaris border radius definitions\n* Ref: (http://polaris/01-ui-style-foundations.html#02-style-principles.05-border-radius)\n*/\n/*\n* Polaris box shadow definitions\n* Ref: (http://polaris/01-ui-style-foundations.html#02-style-principles.06-box-shadow)\n*/\n/*\n* --------------------------------------------------------------------------\n* font variables\n* Ref: (http://polaris/01-ui-style-foundations.html#07-typography-fundamentals)\n* --------------------------------------------------------------------------\n*/\n/*\n* Font stack definitions\n*/\n/*\n* Font families\n*/\n/*\n* Root HTML and BODY tag values\n*/\n/*\n* Font size cadence values\n*/\n/*\n* Standard Paragraph font sizes\n*/\n/*\n* Header tag font sizes\n*/\n/*\n* Line height cadence values\n*/\n/*\n* Font weight values\n*/\n/*\n* --------------------------------------------------------------------------\n* spacing values variables\n* --------------------------------------------------------------------------\n*/\n/*\n* Base spacing cadence values\n* (base grid size x multiplier) / root font size = rem value\n*/\n/*\n* Component/element specific spacing\n*/\n/*\n* --------------------------------------------------------------------------\n* page layout variables\n* --------------------------------------------------------------------------\n*/\n/*\n* --------------------------------------------------------------------------\n* animation variables\n* ref: (http://polaris/01-ui-style-foundations.html#04-motion)\n* --------------------------------------------------------------------------\n*/\n/*\n* Animation easing types\n*/\n/*\n* Animation timings\n*/\n/*\n* --------------------------------------------------------------------------\n* icon size variables\n* --------------------------------------------------------------------------\n*/\n/*\n* --------------------------------------------------------------------------\n* legacy variable names\n* - May still be used in other component repos\n* --------------------------------------------------------------------------\n*/\n/* Font variables */\n/* Space size variables */\n/*\n* ==========================================================================\n* _ti-core.scss\n*\n*  This files contains mixins uses within TI Webcomponents\n* ==========================================================================\n*/\n/*\n * Base style for trigger element\n */\n/*\n* Tooltip trigger main mixin.\n* Use to add style to trigger tooltip display.\n* For example:\n*\n* .tooltip-trigger:hover {\n*     \@include ti-tooltip-trigger();\n* }\n*\n* Typically not used directly, but via the other mixins below.\n*/\n/*\n* Mixin for adding style to trigger tooltip display to\n* an element selector on hover, focus and checked.\n* For example:\n*\n* .tooltip-trigger {\n     \@include ti-tooltip-trigger-element();\n* }\n*/\n/*\n* Mixin for adding style to trigger tooltip display to\n* a web component shadow host on hover, focus and checked.\n* Use in the web component style sheet outside of :host{}.\n* For example:\n*\n* \@include ti-tooltip-trigger-host();\n* :host {\n*     ...\n* }\n*\n* The optional $selector parameter allows a CSS selector\n* which will be added to the :host selector to allow control\n* over the host trigger via a style class or another selector.\n* For example:\n*\n* \@include ti-tooltip-trigger-host(\'.ti-tooltip-trigger\');\n*\n* creates code like\n*\n* :host(.ti-tooltip-trigger:hover) {\n*     ...\n* }\n*\n* instead of\n*\n* :host(:hover) {\n*     ...\n* }\n*/\n:host {\n  position: relative;\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-direction: column;\n  flex-direction: column;\n}\n:host .ti-form-element-label {\n  font-weight: 500;\n  margin-bottom: 0.5rem;\n  line-height: 12px;\n}\n:host .ti-form-element-input {\n  position: relative;\n  margin-bottom: 0.5rem;\n}\n:host .ti-form-element-hintText,\n:host .ti-form-element-errorText {\n  position: relative;\n  font-size: 12px;\n  line-height: 14px;\n  -webkit-transition: opacity 0.4s, -webkit-transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: opacity 0.4s, -webkit-transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1), opacity 0.4s;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1), opacity 0.4s, -webkit-transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n}\n:host .ti-form-element-hintText {\n  margin: 0.25rem 0;\n}\n:host .ti-form-element-errorText {\n  opacity: 0;\n  -webkit-transform: translateY(-8px);\n  transform: translateY(-8px);\n  color: #cc0000;\n}\n:host ::slotted(input[type=text]),\n:host ::slotted(input[type=email]),\n:host ::slotted(input[type=password]),\n:host ::slotted(input[type=tel]),\n:host ::slotted(input[type=date]),\n:host ::slotted(input[type=month]),\n:host ::slotted(input[type=number]),\n:host ::slotted(input[type=search]),\n:host ::slotted(select),\n:host ::slotted(textarea) {\n  font-family: inherit;\n  margin-bottom: 0;\n  width: auto;\n  height: 30px;\n  padding: 0 0.5rem;\n  border: 1px solid #cccccc;\n  color: #555555;\n  line-height: normal;\n}\n:host ::slotted(input[type=text][disabled]),\n:host ::slotted(input[type=email][disabled]),\n:host ::slotted(input[type=password][disabled]),\n:host ::slotted(input[type=tel][disabled]),\n:host ::slotted(input[type=date][disabled]),\n:host ::slotted(input[type=month][disabled]),\n:host ::slotted(input[type=number][disabled]),\n:host ::slotted(input[type=search][disabled]),\n:host ::slotted(select[disabled]),\n:host ::slotted(textarea[disabled]) {\n  background-color: #e8e8e8;\n  cursor: not-allowed;\n}\n:host ::slotted(select) {\n  width: auto;\n}\n:host ::slotted(select::-ms-expand) {\n  margin-left: 0.5rem;\n  margin-right: -0.5rem;\n}\n:host ::slotted(textarea) {\n  padding: 7px;\n  width: 100%;\n  min-height: 150px;\n  resize: vertical;\n}\n:host ::slotted(select[multiple]) {\n  min-height: 150px;\n}\n:host ::slotted(input),\n:host ::slotted(select),\n:host ::slotted(textarea) {\n  color: #555555;\n  font-size: 14px;\n}\n:host ::slotted(optgroup::before) {\n  background-color: #e8e8e8;\n  font-family: inherit;\n  font-weight: 500;\n  padding: 0 0.2em;\n  width: 100%;\n}\n:host ::slotted(option[disabled]),\n:host ::slotted(optgroup[disabled] option),\n:host ::slotted(optgroup[disabled]::before) {\n  color: #aaaaaa;\n  font-weight: 400;\n}\n\n:host(.ti-form-element-has-error) .ti-form-element-input {\n  margin: 0;\n}\n:host(.ti-form-element-has-error) .ti-form-element-errorText {\n  opacity: 1;\n  margin: 0.25rem 0;\n  -webkit-transform: translateY(0px);\n  transform: translateY(0px);\n}\n:host(.ti-form-element-has-error) .ti-form-element-hintText {\n  display: none;\n}\n\n:host([hint-text]:not([hint-text=\"\"])) .ti-form-element-input {\n  margin: 0;\n}\n\n\@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  :host .ti-form-element-hintText {\n    bottom: 4px;\n  }\n\n  :host(.ti-form-element-has-error) .ti-form-element-errorText {\n    bottom: 4px;\n  }\n}"; }
};

export { FormElement as ti_form_element };
