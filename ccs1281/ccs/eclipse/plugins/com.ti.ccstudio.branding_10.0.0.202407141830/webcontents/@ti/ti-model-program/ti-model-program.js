/**
 *  Copyright (c) 2020, Texas Instruments Incorporated
 *  All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *
 *  *   Redistributions of source code must retain the above copyright
 *  notice, this list of conditions and the following disclaimer.
 *  notice, this list of conditions and the following disclaimer in the
 *  documentation and/or other materials provided with the distribution.
 *  *   Neither the name of Texas Instruments Incorporated nor the names of
 *  its contributors may be used to endorse or promote products derived
 *  from this software without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 *  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 *  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 *  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 *  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 *  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 *  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 *  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 *  EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
import { ProgramModel } from './lib/ProgramModel'; //^ti-model-program\ti-model-program.tsx,31^
/**
 * `ti-model-program` is a non visual component for a data binding model where
 * data is read and written from the target through global c variables using
 * the debug server and GEL expression evaluation.
 *
 *  Example:
 *
 *     <ti-model-program id="pm"></ti-model-program>
 *
 * @customElement ti-model-program
 * @polymer
 * @label Program Model
 * @group Transports, Models, and Codecs
 * @archetype <ti-model-program></ti-model-program>
 */
export class TiModelProgram {
    constructor() {
        this.impl = undefined; //^ti-model-program\ti-model-program.tsx,56^
        // #region ti-target-configuration/ti-codec-base-props.tsx:
        // -----------Autogenerated - do not edit--------------
        /**
         * A flag indicating that this model, transport, or codec is not necessary for connecting
         * to the target, and any failure should not prevent connection.
         *
         * @type {boolean}
         * @order 77
         */
        this.optional = false; //^ti-model-program\ti-model-program.tsx,67^
        /**
         * The optional identifier of a target device that is associated with this model, transport or codec.
         * Specifying a target device idicates that this is necessary and/or optional for this connecting
         * to the specified device.  The absence of a target device indicates this is necessary and/or optional
         * for any device.
         *
         * @type {string}
         * @order 80
         */
        this.deviceId = undefined; //^ti-model-program\ti-model-program.tsx,78^
    }
    // #endregion
    connectedCallback() {
        this.impl = new ProgramModel(this.el); //^ti-model-program\ti-model-program.tsx,84^
    }
    ; //^ti-model-program\ti-model-program.tsx,85^
    static get is() { return "ti-model-program"; }
    static get encapsulation() { return "shadow"; }
    static get properties() { return {
        "optional": {
            "type": "boolean",
            "mutable": false,
            "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [{
                        "text": "{boolean}",
                        "name": "type"
                    }, {
                        "text": "77",
                        "name": "order"
                    }],
                "text": "A flag indicating that this model, transport, or codec is not necessary for connecting\nto the target, and any failure should not prevent connection."
            },
            "attribute": "optional",
            "reflect": false,
            "defaultValue": "false"
        },
        "deviceId": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": true,
            "docs": {
                "tags": [{
                        "text": "{string}",
                        "name": "type"
                    }, {
                        "text": "80",
                        "name": "order"
                    }],
                "text": "The optional identifier of a target device that is associated with this model, transport or codec.\nSpecifying a target device idicates that this is necessary and/or optional for this connecting\nto the specified device.  The absence of a target device indicates this is necessary and/or optional\nfor any device."
            },
            "attribute": "device-id",
            "reflect": false,
            "defaultValue": "undefined"
        }
    }; }
    static get elementRef() { return "el"; }
}
; //^ti-model-program\ti-model-program.tsx,86^
