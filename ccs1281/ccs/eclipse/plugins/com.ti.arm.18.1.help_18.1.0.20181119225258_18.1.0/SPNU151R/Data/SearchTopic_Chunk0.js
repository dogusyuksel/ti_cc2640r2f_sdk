define({"0":{i:0.0145243282498188,u:"../Content/SPNU151R_HTML/abstract.html",a:"About This Manual The  ARM Optimizing C/C++ Compiler User\u0027s Guide explains how to use the following Texas Instruments Code Generation compiler tools:  Compiler Library build utility C++ name demangler The TI compiler accepts C and C++ code conforming to the International Organization for ...",t:"Read This First"},"1":{i:0.0182559265746639,u:"../Content/SPNU151R_HTML/introduction-to-the-software-development-tools.html",a:"The ARM® is supported by a set of software development tools, which includes an optimizing C/C++ compiler, an assembler, a linker, and assorted utilities. This chapter provides an overview of these tools and introduces the features of the optimizing C/C++ compiler. The assembler and linker are ...",t:"1 Introduction to the Software Development Tools"},"2":{i:0.147905058142072,u:"../Content/SPNU151R_HTML/using-the-c-c-compiler.html",a:"The compiler translates your source program into machine language object code that the ARM can execute. Source code must be compiled, assembled, and linked to create an executable object file. All of these steps are executed at once by using the compiler. 2.1 About the Compiler  The compiler lets ...",t:"2 Using the C/C++ Compiler"},"3":{i:0.0720954627133921,u:"../Content/SPNU151R_HTML/optimizing-your-code.html",a:"The compiler tools can perform many optimizations to improve the execution speed and reduce the size of C and C++ programs by simplifying loops, rearranging statements and expressions, and allocating variables into registers.  This chapter describes how to invoke different levels of optimization and ...",t:"3 Optimizing Your Code"},"4":{i:0.0954781601705401,u:"../Content/SPNU151R_HTML/linking-c-c-code.html",a:" The C/C++ compiler and assembly language tools provide two methods for linking your programs:  You can compile individual modules and link them together. This method is especially useful when you have multiple source files.  You can compile and link in one step. This method is useful when you have ...",t:"4 Linking C/C++ Code"},"5":{i:0.120852390681192,u:"../Content/SPNU151R_HTML/arm-c-c-language-implementation.html",a:"The C/C++ compiler supports the C/C++ language standard that was developed by a committee of the American National Standards Institute (ANSI) and subsequently adopted by the International Standards Organization (IS0).  The C++ language supported by the ARM is defined by the ANSI/ISO/IEC 14882:2014 ...",t:"5 ARM C/C++ Language Implementation"},"6":{i:0.112936948286207,u:"../Content/SPNU151R_HTML/run-time-environment.html",a:"This chapter describes the ARM C/C++ run-time environment. To ensure successful execution of C/C++ programs, it is critical that all run-time code maintain this environment. It is also important to follow the guidelines in this chapter if you write assembly language functions that interface with ...",t:"6 Run-Time Environment"},"7":{i:0.0684254927096603,u:"../Content/SPNU151R_HTML/using-run-time-support-functions-and-building-libraries.html",a:" Some of the features of C/C++ (such as I/O, dynamic memory allocation, string operations, and trigonometric functions) are provided as an ANSI/ISO C/C++ standard library, rather than as part of the compiler itself. The TI implementation of this library is the run-time-support library (RTS). The ...",t:"7 Using Run-Time-Support Functions and Building Libraries"},"8":{i:0.219471120220779,u:"../Content/SPNU151R_HTML/c-name-demangler.html",a:" The C++ compiler implements function overloading, operator overloading, and type-safe linking by encoding a function\u0027s prototype and namespace in its link-level name. The process of encoding the prototype into the linkname is often referred to as name mangling. When you inspect mangled names, such ...",t:"8 C++ Name Demangler"},"9":{i:0.0145243282498188,u:"../Content/SPNU151R_HTML/glossary.html",a:"A.1 Terminology absolute lister  A debugging tool that allows you to create assembler listings that contain absolute addresses. Application Binary Interface (ABI)  A standard that specifies the interface between two object modules. An ABI specifies how functions are called and how information is ...",t:"A Glossary"},"10":{i:0.0160391354905975,u:"../Content/SPNU151R_HTML/revision-history.html",a:"B Revision History B.1 Recent Revisions Table B-1 lists significant changes made to this document. The left column identifies the first version of this document in which that particular change appeared. Table B-1 Revision History ",t:"B Revision History"},"11":{i:0.0145243282498188,u:"../Content/Resources/MasterPages/important_notice.html",a:"Texas Instruments Incorporated and its subsidiaries (TI) reserve the right to make corrections, enhancements, improvements and other changes to its semiconductor products and services per JESD46, latest issue, and to discontinue any product or service per JESD48, latest issue. Buyers should obtain ...",t:"IMPORTANT NOTICE"},"12":{i:0.0268700072621651,u:"../Content/SPNU151R_HTML/includes/important_notice.html",a:"Texas Instruments Incorporated (‘TI”) technical, application or other design advice, services or information, including, but not limited to, reference designs and materials relating to evaluation modules, (collectively, “TI Resources”) are intended to assist designers who are developing applications ...",t:"IMPORTANT NOTICE FOR TI DESIGN INFORMATION AND RESOURCES"},"13":{i:0.0145243282498188,u:"../Content/SPNU151R_HTML/includes/meta.html",a:"",t:"meta"},"14":{i:0.0145243282498188,u:"../Content/SPNU151R_HTML/includes/pagebottom.html",a:"Copyright© 2018, Texas Instruments Incorporated. An  IMPORTANT NOTICE  for this document addresses availability, warranty, changes, use in safety-critical applications, intellectual property matters and other important disclaimers. Submit Documentation Feedback",t:"pagebottom"},"15":{i:0.0145243282498188,u:"../Content/SPNU151R_HTML/includes/pagetop.html",a:"ARM Optimizing\n\t C/C++ Compiler\n\t v18.1.0.LTS User\u0027s Guide SPNU151R - REVISED JANUARY 2018 Download PDF",t:"pagetop"},"16":{i:0.0145243282498188,u:"../Content/SPNU151R_HTML/includes/toc.html",a:"Read This First About This Manual Notational Conventions Related Documentation Related Documentation From Texas Instruments Trademarks 1 Introduction to the Software Development Tools 1.1 Software Development Tools Overview 1.2 Compiler Interface 1.3 ANSI/ISO Standard 1.4 Output Files 1.5 Utilities ...",t:"toc"},});